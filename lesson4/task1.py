# Реализовать скрипт, в котором должна быть предусмотрена функция расчета заработной платы сотрудника.
# В расчете необходимо использовать формулу: (выработка в часах * ставка в час) + премия.
# Для выполнения расчета для конкретных значений необходимо запускать скрипт с параметрами.

import sys
import numpy as np
from operator import lt

from tools import convert_to_number, is_correct


def print_error_msg(is_correct_mask):
    """
    Выводит сообщение о наличии некорректных данных в аргументах скрипта
    :param is_correct_mask: список флагов - там где параметр верный, стоит True
    :type is_correct_mask: List[bool, None]
    """
    # Находим некорректные параметры, для этого надо инвертировать маску
    # Берем те элементы, которые соответствуют True в инвертированной маске
    incorrect_params = np.array(sys.argv[1:])[~is_correct_mask]
    # Формируем строку сообщения в зависимости от количества некорректных параметров
    s = 'Некорректный параметр:' if len(incorrect_params) == 1 else 'Некорректные параметры:'
    # Формируем сообщение из списка некорректных параметров
    print(s, ', '.join(np.array(incorrect_params)))


def get_salary(work, rate, bonus):
    """
    Вычисляет значение заработной платы
    :param work: выработка в час
    :type work: float
    :param rate: ставка в час
    :type rate: float
    :param bonus: премия
    :type bonus: float
    :return: заработная плата
    :type: float
    """
    return work * rate + bonus


def main():
    """
    Основная функция
    Принимает три параметра: выработка в часах, ставка и премия
    Если все введенные параметры корректны, вычисляет зарплату сотрудника
    """
    # Если было передано недостаточно параметров, завершаем программу
    if len(sys.argv) < 4:
        print('Недостаточно аргументов при вызове программы')
        return

    # Пробуем сконвертировать переданные параметры в вещественное число
    params = [convert_to_number(v, float) for v in sys.argv[1:]]
    # Массив булевых значений - показателей корректности введенных параметров, нужна числа >= 0
    is_correct_mask = np.array([is_correct(p, lt) for p in params])

    # Если есть некорректный параметр, то завершаем программу
    # Выводим сообщение об ошибке
    if not np.all(is_correct_mask):
        print_error_msg(is_correct_mask)
        return

    # Если все введенные параметры корректны, вычисляем значение зарплаты
    print('Заработная плата сотрудника =', get_salary(*params))


# Вызов основной функции
main()
